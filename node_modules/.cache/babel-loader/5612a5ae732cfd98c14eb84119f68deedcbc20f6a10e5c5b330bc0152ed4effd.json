{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../constants';\n/**\n * \n * @returns All resources\n */\nexport async function allResources() {\n  try {\n    const response = await axios.get(`${API_URL}raw`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description Get all application names\n * @returns applicationNames\n */\nexport async function getApplications() {\n  try {\n    const response = await axios.get(`${API_URL}applications`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description get resources by application name\n * @param name \n * @returns List of resources\n */\nexport async function getResoucesByApplicationName(name) {\n  try {\n    const response = await axios.get(`${API_URL}applications/${name}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n}\n\n/**\n * @description Get all resources\n * @returns resourcesNames\n */\n\nexport async function getResources() {\n  try {\n    const response = await axios.get(`${API_URL}resources`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description Get resources by resources name\n * @param name \n * @returns List of resources\n */\n\nexport async function getResourcesByGroupName(name) {\n  try {\n    const response = await axios.get(`${API_URL}resources/${name}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","API_URL","allResources","response","get","data","error","console","getApplications","getResoucesByApplicationName","name","getResources","getResourcesByGroupName"],"sources":["/Users/sarathjasrin/Desktop/Prema/Interview/cloud-services/src/services/cloudServices.ts"],"sourcesContent":["import axios, {AxiosResponse} from 'axios';\nimport { API_URL } from '../constants';\nimport { applicationNames, resourcesNames, resources} from '../models/application'\n\n/**\n * \n * @returns All resources\n */\nexport async function allResources(): Promise<resources> {\n  try {\n    const response:AxiosResponse<resources> = await axios.get(`${API_URL}raw`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description Get all application names\n * @returns applicationNames\n */\nexport async function getApplications(): Promise<applicationNames> {\n  try {\n    const response:AxiosResponse<applicationNames> = await axios.get(`${API_URL}applications`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description get resources by application name\n * @param name \n * @returns List of resources\n */\nexport async function getResoucesByApplicationName(name:string): Promise<resources>{\n  try {\n    const response:AxiosResponse<resources> = await axios.get(`${API_URL}applications/${name}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return []\n  }\n}\n\n\n/**\n * @description Get all resources\n * @returns resourcesNames\n */\n\nexport async function getResources(): Promise<resourcesNames> {\n  try {\n    const response:AxiosResponse<resourcesNames> = await axios.get(`${API_URL}resources`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}\n\n/**\n * @description Get resources by resources name\n * @param name \n * @returns List of resources\n */\n\nexport async function getResourcesByGroupName(name:string): Promise<resources> {\n  try {\n    const response: AxiosResponse<resources> = await axios.get(`${API_URL}resources/${name}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAuB,OAAO;AAC1C,SAASC,OAAO,QAAQ,cAAc;AAGtC;AACA;AACA;AACA;AACA,OAAO,eAAeC,YAAYA,CAAA,EAAuB;EACvD,IAAI;IACF,MAAMC,QAAiC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,KAAI,CAAC;IAC1E,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA,OAAO,eAAeE,eAAeA,CAAA,EAA8B;EACjE,IAAI;IACF,MAAML,QAAwC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,cAAa,CAAC;IAC1F,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeG,4BAA4BA,CAACC,IAAW,EAAqB;EACjF,IAAI;IACF,MAAMP,QAAiC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,gBAAeS,IAAK,EAAC,CAAC;IAC3F,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF;;AAGA;AACA;AACA;AACA;;AAEA,OAAO,eAAeK,YAAYA,CAAA,EAA4B;EAC5D,IAAI;IACF,MAAMR,QAAsC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,WAAU,CAAC;IACrF,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeM,uBAAuBA,CAACF,IAAW,EAAsB;EAC7E,IAAI;IACF,MAAMP,QAAkC,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,OAAQ,aAAYS,IAAK,EAAC,CAAC;IACzF,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}